From 2db4112d9245e2bd34bf72e661e47f0de7f8a79f Mon Sep 17 00:00:00 2001
From: X512 <danger_mail@list.ru>
Date: Mon, 1 Jun 2020 20:57:30 +0900
Subject: BGradient: add Copy method

Change-Id: I3edd4eb42f1bbd0f1f50a9488652dad8b59a13b8
---
 headers/os/interface/Gradient.h |  1 +
 src/kits/interface/Gradient.cpp | 58 +++++++++++++++++++++------------
 2 files changed, 38 insertions(+), 21 deletions(-)

diff --git a/headers/os/interface/Gradient.h b/headers/os/interface/Gradient.h
index ca3f8035a9..bb1045d0ac 100644
--- a/headers/os/interface/Gradient.h
+++ b/headers/os/interface/Gradient.h
@@ -88,6 +88,7 @@ public:
 
 			void				MakeEmpty();
 
+			BGradient*			Copy() const;
 			status_t			Flatten(BDataIO* stream) const;
 	static	status_t			Unflatten(BGradient *&output, BDataIO* stream);
 
diff --git a/src/kits/interface/Gradient.cpp b/src/kits/interface/Gradient.cpp
index c0c8fce68b..9365b8f7cf 100644
--- a/src/kits/interface/Gradient.cpp
+++ b/src/kits/interface/Gradient.cpp
@@ -12,6 +12,7 @@
 #include <algorithm>
 #include <math.h>
 #include <stdio.h>
+#include <string.h>
 
 #include <DataIO.h>
 #include <Message.h>
@@ -487,6 +488,42 @@ BGradient::MakeEmpty()
 }
 
 
+static BGradient*
+gradient_for_type(BGradient::Type type)
+{
+	switch (type) {
+		case BGradient::TYPE_LINEAR:
+			return new (std::nothrow) BGradientLinear();
+		case BGradient::TYPE_RADIAL:
+			return new (std::nothrow) BGradientRadial();
+		case BGradient::TYPE_RADIAL_FOCUS:
+			return new (std::nothrow) BGradientRadialFocus();
+		case BGradient::TYPE_DIAMOND:
+			return new (std::nothrow) BGradientDiamond();
+		case BGradient::TYPE_CONIC:
+			return new (std::nothrow) BGradientConic();
+		case BGradient::TYPE_NONE:
+			return new (std::nothrow) BGradient();
+	}
+	return NULL;
+}
+
+
+BGradient*
+BGradient::Copy() const
+{
+	BGradient* gradient = gradient_for_type(fType);
+	if (gradient == NULL)
+		return gradient;
+
+	gradient->fType = fType;
+	gradient->SetColorStops(*this);
+	memcpy(&gradient->fData, &fData, sizeof(fData));
+
+	return gradient;
+}
+
+
 status_t
 BGradient::Flatten(BDataIO* stream) const
 {
@@ -535,27 +572,6 @@ BGradient::Flatten(BDataIO* stream) const
 }
 
 
-static BGradient*
-gradient_for_type(BGradient::Type type)
-{
-	switch (type) {
-		case BGradient::TYPE_LINEAR:
-			return new (std::nothrow) BGradientLinear();
-		case BGradient::TYPE_RADIAL:
-			return new (std::nothrow) BGradientRadial();
-		case BGradient::TYPE_RADIAL_FOCUS:
-			return new (std::nothrow) BGradientRadialFocus();
-		case BGradient::TYPE_DIAMOND:
-			return new (std::nothrow) BGradientDiamond();
-		case BGradient::TYPE_CONIC:
-			return new (std::nothrow) BGradientConic();
-		case BGradient::TYPE_NONE:
-			return new (std::nothrow) BGradient();
-	}
-	return NULL;
-}
-
-
 status_t
 BGradient::Unflatten(BGradient *&output, BDataIO* stream)
 {
-- 
2.30.2

