From 4199755cfb1895411078274dc46e9bf5dbda1d7a Mon Sep 17 00:00:00 2001
From: X512 <danger_mail@list.ru>
Date: Tue, 14 Jul 2020 21:37:00 +0900
Subject: video_mixer: fix build and crash, add to image

Change-Id: I3c58538666313e74134fb6f1f5fc0c697b213cca
---
 build/jam/images/definitions/regular             |  1 +
 .../media-add-ons/video_mixer/BufferMixer.cpp    |  2 +-
 .../media/media-add-ons/video_mixer/Jamfile      |  2 +-
 .../video_mixer/VideoMixerAddOn.cpp              | 16 ++++++++--------
 .../media-add-ons/video_mixer/VideoMixerNode.cpp | 16 ++++++++--------
 .../video_mixer/VideoMixerNodeConsumer.cpp       |  4 ++--
 .../video_mixer/VideoMixerNodeEventLooper.cpp    |  4 ++--
 .../video_mixer/VideoMixerNodeProducer.cpp       |  4 ++--
 8 files changed, 25 insertions(+), 24 deletions(-)

diff --git a/build/jam/images/definitions/regular b/build/jam/images/definitions/regular
index 43d5117915..6d42312521 100644
--- a/build/jam/images/definitions/regular
+++ b/build/jam/images/definitions/regular
@@ -147,6 +147,7 @@ SYSTEM_ADD_ONS_MEDIA += [ FFilterByBuildFeatures
 	opensound.media_addon
 	tone_producer_demo.media_addon
 	usb_webcam.media_addon
+	video_mixer.media_addon
 	video_producer_demo.media_addon	video_window_demo.media_addon
 	vst_host.media_addon
 ] ;
diff --git a/src/add-ons/media/media-add-ons/video_mixer/BufferMixer.cpp b/src/add-ons/media/media-add-ons/video_mixer/BufferMixer.cpp
index 22aeda7cbb..347cfd8649 100644
--- a/src/add-ons/media/media-add-ons/video_mixer/BufferMixer.cpp
+++ b/src/add-ons/media/media-add-ons/video_mixer/BufferMixer.cpp
@@ -54,7 +54,7 @@ BufferMixer::Merge(BBuffer *input, BBuffer *output) {
 	
 	uint8 *source = (uint8 *)input->Data();
 	uint8 *destination = (uint8 *)output->Data();
-	uint32 size = input->Header()->size_used / 4;	
+	uint32 size = input->Header()->size_used / 4;
 	uint8 alpha = 0;
 	uint8 c1, c2, c3;
 
diff --git a/src/add-ons/media/media-add-ons/video_mixer/Jamfile b/src/add-ons/media/media-add-ons/video_mixer/Jamfile
index f41d494cbd..6446260270 100644
--- a/src/add-ons/media/media-add-ons/video_mixer/Jamfile
+++ b/src/add-ons/media/media-add-ons/video_mixer/Jamfile
@@ -13,7 +13,7 @@ for architectureObject in [ MultiArchSubDirSetup ] {
 			VideoMixerAddOn.cpp
 			CpuCapabilities.cpp
 			BufferMixer.cpp
-			yuvrgb.nasm
+			# yuvrgb.nasm
 			: be media [ TargetLibsupc++ ] [ TargetLibstdc++ ]
 		;
 	}
diff --git a/src/add-ons/media/media-add-ons/video_mixer/VideoMixerAddOn.cpp b/src/add-ons/media/media-add-ons/video_mixer/VideoMixerAddOn.cpp
index af739abe0c..35d48063c7 100644
--- a/src/add-ons/media/media-add-ons/video_mixer/VideoMixerAddOn.cpp
+++ b/src/add-ons/media/media-add-ons/video_mixer/VideoMixerAddOn.cpp
@@ -40,7 +40,7 @@ VideoMixerAddOn::~VideoMixerAddOn()
 VideoMixerAddOn::VideoMixerAddOn(image_id image) :
 	BMediaAddOn(image)
 {
-	PRINT("VideoMixerAddOn::VideoMixerAddOn\n");
+	PRINT(("VideoMixerAddOn::VideoMixerAddOn\n"));
 	refCount = 0;
 }
 	
@@ -51,13 +51,13 @@ VideoMixerAddOn::VideoMixerAddOn(image_id image) :
 status_t VideoMixerAddOn::InitCheck(
 	const char **out_failure_text)
 {
-	PRINT("VideoMixerAddOn::InitCheck\n");
+	PRINT(("VideoMixerAddOn::InitCheck\n"));
 	return B_OK;
 }
 
 int32 VideoMixerAddOn::CountFlavors()
 {
-	PRINT("VideoMixerAddOn::CountFlavors\n");
+	PRINT(("VideoMixerAddOn::CountFlavors\n"));
 	return 1;
 }
 
@@ -65,7 +65,7 @@ status_t VideoMixerAddOn::GetFlavorAt(
 	int32 n,
 	const flavor_info **out_info)
 {
-	PRINT("VideoMixerAddOn::GetFlavorAt\n");
+	PRINT(("VideoMixerAddOn::GetFlavorAt\n"));
 	if (n != 0) {
 		fprintf(stderr,"<- B_BAD_INDEX\n");
 		return B_BAD_INDEX;
@@ -81,7 +81,7 @@ BMediaNode * VideoMixerAddOn::InstantiateNodeFor(
 				BMessage * config,
 				status_t * out_error)
 {
-	PRINT("VideoMixerAddOn::InstantiateNodeFor\n");
+	PRINT(("VideoMixerAddOn::InstantiateNodeFor\n"));
 	VideoMixerNode *node = new VideoMixerNode(info, config, this);
 	if (node == NULL) {
 		*out_error = B_NO_MEMORY;
@@ -96,7 +96,7 @@ status_t VideoMixerAddOn::GetConfigurationFor(
 				BMediaNode * your_node,
 				BMessage * into_message)
 {
-	PRINT("VideoMixerAddOn::GetConfigurationFor\n");
+	PRINT(("VideoMixerAddOn::GetConfigurationFor\n"));
 	VideoMixerNode *node = dynamic_cast<VideoMixerNode *>(your_node);
 	if (node == NULL) {
 		fprintf(stderr,"<- B_BAD_TYPE\n");
@@ -107,7 +107,7 @@ status_t VideoMixerAddOn::GetConfigurationFor(
 
 bool VideoMixerAddOn::WantsAutoStart()
 {
-	PRINT("VideoMixerAddOn::WantsAutoStart\n");
+	PRINT(("VideoMixerAddOn::WantsAutoStart\n"));
 	return false;
 }
 
@@ -117,7 +117,7 @@ status_t VideoMixerAddOn::AutoStart(
 				int32 *out_internal_id,
 				bool *out_has_more)
 {
-	PRINT("VideoMixerAddOn::AutoStart\n");
+	PRINT(("VideoMixerAddOn::AutoStart\n"));
 	return B_OK;
 }
 
diff --git a/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNode.cpp b/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNode.cpp
index e85e125340..0f9918dc2b 100644
--- a/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNode.cpp
+++ b/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNode.cpp
@@ -93,7 +93,7 @@ VideoMixerNode::CreateInput(uint32 inputID) {
 	ClearInput(input);
 
 	// don't overwrite available space, and be sure to terminate
-	sprintf(input->name, "VideoMixer Input %ld", inputID);
+	sprintf(input->name, "VideoMixer Input %" B_PRIu32, inputID);
 	
 	return input;
 }
@@ -185,7 +185,7 @@ BMediaAddOn *VideoMixerNode::AddOn(
 
 void VideoMixerNode::Start(bigtime_t performance_time)
 {
-	fprintf(stderr,"VideoMixerNode::Start(pt=%lld)\n", performance_time);
+	fprintf(stderr,"VideoMixerNode::Start(pt=%" B_PRIdBIGTIME ")\n", performance_time);
 	BMediaEventLooper::Start(performance_time);
 }
 
@@ -194,9 +194,9 @@ void VideoMixerNode::Stop(
 				bool immediate)
 {
 	if (immediate) {
-		fprintf(stderr,"VideoMixerNode::Stop(pt=%lld,<immediate>)\n", performance_time);
+		fprintf(stderr,"VideoMixerNode::Stop(pt=%" B_PRIdBIGTIME ",<immediate>)\n", performance_time);
 	} else {
-		fprintf(stderr,"VideoMixerNode::Stop(pt=%lld,<scheduled>)\n", performance_time);
+		fprintf(stderr,"VideoMixerNode::Stop(pt=%" B_PRIdBIGTIME ",<scheduled>)\n", performance_time);
 	}
 	BMediaEventLooper::Stop(performance_time, immediate);
 }
@@ -205,7 +205,7 @@ void VideoMixerNode::Seek(
 				bigtime_t media_time,
 				bigtime_t performance_time)
 {
-	fprintf(stderr,"VideoMixerNode::Seek(mt=%lld,pt=%lld)\n", media_time,performance_time);
+	fprintf(stderr,"VideoMixerNode::Seek(mt=%" B_PRIdBIGTIME ",pt=%" B_PRIdBIGTIME ")\n", media_time,performance_time);
 	BMediaEventLooper::Seek(media_time, performance_time);
 }
 
@@ -219,7 +219,7 @@ void VideoMixerNode::TimeWarp(
 				bigtime_t at_real_time,
 				bigtime_t to_performance_time)
 {
-	fprintf(stderr,"VideoMixerNode::TimeWarp(rt=%lld,pt=%lld)\n", at_real_time, to_performance_time);
+	fprintf(stderr,"VideoMixerNode::TimeWarp(rt=%" B_PRIdBIGTIME ",pt=%" B_PRIdBIGTIME ")\n", at_real_time, to_performance_time);
 	BMediaEventLooper::TimeWarp(at_real_time, to_performance_time);
 }
 
@@ -305,8 +305,8 @@ void VideoMixerNode::GetFlavor(flavor_info *outInfo, int32 id)
 
 	if (outInfo != NULL) {
 		outInfo->internal_id = id;
-		strcpy(outInfo->name, "Haiku VideoMixer");
-		strcpy(outInfo->info, "A VideoMixerNode node mixes multiple video"
+		outInfo->name = strdup("Haiku VideoMixer");
+		outInfo->info = strdup("A VideoMixerNode node mixes multiple video"
 			" streams into a single stream.");
 		outInfo->kinds = B_BUFFER_CONSUMER | B_BUFFER_PRODUCER;
 		outInfo->flavor_flags = B_FLAVOR_IS_LOCAL;
diff --git a/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeConsumer.cpp b/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeConsumer.cpp
index 9fbedb45c6..90e937efd1 100644
--- a/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeConsumer.cpp
+++ b/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeConsumer.cpp
@@ -45,7 +45,7 @@ status_t VideoMixerNode::GetNextInput(
 				int32 *cookie,
 				media_input *out_input)
 {
-	fprintf(stderr,"VideoMixerNode(BBufferConsumer)::GetNextInput (%ld)\n",*cookie);
+	fprintf(stderr,"VideoMixerNode(BBufferConsumer)::GetNextInput (%" B_PRId32 ")\n",*cookie);
 	
 	// Cookie 0 is the connecting input, all others are connected inputs
 	if (uint32(*cookie) == fConnectedInputs.size()) {
@@ -168,7 +168,7 @@ status_t VideoMixerNode::Connected(
 
 	// compute the latency or just guess
 	fInternalLatency = 500; // just a guess
-	fprintf(stderr,"  internal latency guessed = %lld\n", fInternalLatency);
+	fprintf(stderr,"  internal latency guessed = %" B_PRIdBIGTIME "\n", fInternalLatency);
 	
 	SetEventLatency(fInternalLatency);
 
diff --git a/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeEventLooper.cpp b/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeEventLooper.cpp
index c2c4be104d..f6424c7b7e 100644
--- a/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeEventLooper.cpp
+++ b/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeEventLooper.cpp
@@ -49,7 +49,7 @@ void VideoMixerNode::HandleEvent(
 			HandleParameter(event,lateness,realTimeEvent);
 			break;
 		default:
-			fprintf(stderr,"  unknown event type: %ld\n",event->type);
+			fprintf(stderr,"  unknown event type: %" B_PRId32 "\n",event->type);
 			break;
 	}
 }
@@ -99,7 +99,7 @@ status_t VideoMixerNode::HandleSeek(
 						bigtime_t lateness,
 						bool realTimeEvent)
 {
-	fprintf(stderr,"VideoMixerNode(BMediaEventLooper)::HandleSeek(t=%lld,d=%ld,bd=%lld)\n",event->event_time, event->data, event->bigdata);
+	fprintf(stderr,"VideoMixerNode(BMediaEventLooper)::HandleSeek(t=%" B_PRIdBIGTIME ",d=%" B_PRId32 ",bd=%" B_PRId64 ")\n",event->event_time, event->data, event->bigdata);
 	return B_OK;
 }
 						
diff --git a/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeProducer.cpp b/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeProducer.cpp
index 8fa016b462..39ae8f8666 100644
--- a/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeProducer.cpp
+++ b/src/add-ons/media/media-add-ons/video_mixer/VideoMixerNodeProducer.cpp
@@ -99,7 +99,7 @@ status_t VideoMixerNode::GetNextOutput(	/* cookie starts as 0 */
 				int32 *cookie,
 				media_output *out_output)
 {
-	fprintf(stderr,"VideoMixerNode(BBufferProducer)::GetNextOutput (%ld)\n",*cookie);
+	fprintf(stderr,"VideoMixerNode(BBufferProducer)::GetNextOutput (%" B_PRId32 ")\n",*cookie);
 	
 	// only 1 output
 	if (*cookie != 0) {
@@ -240,7 +240,7 @@ void VideoMixerNode::Connect(
 void VideoMixerNode::ComputeInternalLatency() {
 	fprintf(stderr,"VideoMixerNode(BBufferProducer)::ComputeInternalLatency\n");
 	fInternalLatency = 100; // just guess
-	fprintf(stderr,"  internal latency guessed = %lld\n",fInternalLatency);
+	fprintf(stderr,"  internal latency guessed = %" B_PRIdBIGTIME "\n",fInternalLatency);
 }
 
 void VideoMixerNode::Disconnect(
-- 
2.30.2

