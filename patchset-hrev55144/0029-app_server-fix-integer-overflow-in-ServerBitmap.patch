From 03e09185f81cd24d0fb3d0b0fe97805d552bdb64 Mon Sep 17 00:00:00 2001
From: X512 <danger_mail@list.ru>
Date: Thu, 14 Jan 2021 06:04:30 +0900
Subject: app_server: fix integer overflow in ServerBitmap

Integer overflow caused bitmap buffer creation of wrong size and out of
bounds access when large bitmap was created. Now allocation failure is
reported for large bitmaps.

Change-Id: I297aa6e3b79b32a486d297f1239a1fd4397a8a36
---
 src/servers/app/ServerBitmap.h | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/src/servers/app/ServerBitmap.h b/src/servers/app/ServerBitmap.h
index 83be161e9b..f329a03f98 100644
--- a/src/servers/app/ServerBitmap.h
+++ b/src/servers/app/ServerBitmap.h
@@ -40,9 +40,7 @@ public:
 
 	inline	uint8*			Bits() const
 								{ return fBuffer; }
-	inline	uint32			BitsLength() const
-								{ return (uint32)(fBytesPerRow * fHeight); }
-
+	inline	uint32			BitsLength() const;
 	inline	BRect			Bounds() const
 								{ return BRect(0, 0, fWidth - 1, fHeight - 1); }
 	inline	int32			Width() const
@@ -126,6 +124,14 @@ public:
 };
 
 
+uint32
+ServerBitmap::BitsLength() const
+{
+	int64 length = fBytesPerRow * fHeight;
+	return (length > 0 && length <= UINT32_MAX) ? (uint32)length : 0;
+}
+
+
 //! (only for server bitmaps)
 void
 ServerBitmap::ShallowCopy(const ServerBitmap* from)
-- 
2.30.2

