From 006e5d5d554833c1fe9fe94ffe249152c71a4287 Mon Sep 17 00:00:00 2001
From: X512 <danger_mail@list.ru>
Date: Wed, 2 Jun 2021 14:07:40 +0900
Subject: Revert "Terminal: avoid using exceptions"

This reverts commit 7773a4a7c8f6b5b9447f72b20cd2db715e31b6eb.
---
 src/apps/terminal/TermParse.cpp | 36 ++++++++++++++-------------------
 src/apps/terminal/TermParse.h   |  2 +-
 2 files changed, 16 insertions(+), 22 deletions(-)

diff --git a/src/apps/terminal/TermParse.cpp b/src/apps/terminal/TermParse.cpp
index 0e46c7206a..d925ade1fc 100644
--- a/src/apps/terminal/TermParse.cpp
+++ b/src/apps/terminal/TermParse.cpp
@@ -57,22 +57,21 @@ extern const char* gLineDrawGraphSet[]; /* may be used for G0, G1, G2, G3 */
 
 
 //! Get char from pty reader buffer.
-inline status_t
-TermParse::_NextParseChar(uchar& ch)
+inline uchar
+TermParse::_NextParseChar()
 {
 	if (fParserBufferOffset >= fParserBufferSize) {
 		// parser buffer empty
 		status_t error = _ReadParserBuffer();
 		if (error != B_OK)
-			return error;
+			throw error;
 	}
 
 #ifdef USE_DEBUG_SNAPSHOTS
 	fBuffer->CaptureChar(fParserBuffer[fParserBufferOffset]);
 #endif
 
-	ch = fParserBuffer[fParserBufferOffset++];
-	return B_OK;
+	return fParserBuffer[fParserBufferOffset++];
 }
 
 
@@ -361,9 +360,6 @@ TermParse::_GuessGroundTable(int encoding)
 }
 
 
-#define CheckSkip(res) {status_t _res = res; if (_res < B_OK) goto failed;}
-
-
 int32
 TermParse::EscParse()
 {
@@ -395,9 +391,8 @@ TermParse::EscParse()
 	BAutolock locker(fBuffer);
 
 	while (!fQuitting) {
-		{
-			uchar c = 0;
-			CheckSkip(_NextParseChar(c));
+		try {
+			uchar c = _NextParseChar();
 
 			//DumpState(groundtable, parsestate, c);
 
@@ -438,7 +433,7 @@ TermParse::EscParse()
 						case B_JIS_CONVERSION:
 						case B_BIG5_CONVERSION:
 							cbuf[srcLen++] = c;
-							CheckSkip(_NextParseChar(c));
+							c = _NextParseChar();
 							cbuf[srcLen++] = c;
 							break;
 
@@ -446,7 +441,7 @@ TermParse::EscParse()
 							cbuf[srcLen++] = c;
 							do {
 								// GBK-compatible codepoints are 2-bytes long
-								CheckSkip(_NextParseChar(c));
+								c = _NextParseChar();
 								cbuf[srcLen++] = c;
 
 								// GB18030 extends GBK with 4-byte codepoints
@@ -500,7 +495,7 @@ TermParse::EscParse()
 
 				case CASE_SJIS_INSTRING:
 					cbuf[srcLen++] = c;
-					CheckSkip(_NextParseChar(c));
+					c = _NextParseChar();
 					cbuf[srcLen++] = c;
 
 					convert_to_utf8(currentEncoding, cbuf, &srcLen,
@@ -510,7 +505,7 @@ TermParse::EscParse()
 
 				case CASE_UTF8_2BYTE:
 					cbuf[srcLen++] = c;
-					CheckSkip(_NextParseChar(c));
+					c = _NextParseChar();
 					if (groundtable[c] != CASE_UTF8_INSTRING)
 						break;
 					cbuf[srcLen++] = c;
@@ -522,7 +517,7 @@ TermParse::EscParse()
 					cbuf[srcLen++] = c;
 
 					do {
-						CheckSkip(_NextParseChar(c));
+						c = _NextParseChar();
 						if (groundtable[c] != CASE_UTF8_INSTRING) {
 							srcLen = 0;
 							break;
@@ -559,8 +554,7 @@ TermParse::EscParse()
 					}
 
 					if (set > -1) {
-						uchar page = 0;
-						CheckSkip(_NextParseChar(page));
+						char page = _NextParseChar();
 						switch (page) {
 							case '0':
 								graphSets[set] = gLineDrawGraphSet;
@@ -1069,7 +1063,7 @@ TermParse::EscParse()
 						bool isParsed = false;
 						int32 skipCount = 0; // take care about UTF-8 characters
 						for (uint i = 0; !isParsed && i < sizeof(params); i++) {
-							CheckSkip(_NextParseChar(params[i]));
+							params[i] = _NextParseChar();
 
 							if (skipCount > 0) {
 								skipCount--;
@@ -1234,9 +1228,9 @@ TermParse::EscParse()
 				default:
 					break;
 			}
+		} catch (...) {
+			break;
 		}
-		failed:
-		;
 	}
 
 	return B_OK;
diff --git a/src/apps/terminal/TermParse.h b/src/apps/terminal/TermParse.h
index a7a870b7ab..26e57ecc78 100644
--- a/src/apps/terminal/TermParse.h
+++ b/src/apps/terminal/TermParse.h
@@ -38,7 +38,7 @@ public:
 	status_t StopThreads();
 
 private:
-	inline status_t _NextParseChar(uchar& ch);
+	inline uchar _NextParseChar();
 
 	// Initialize TermParse and PtyReader thread.
 	status_t _InitTermParse();
-- 
2.30.2

