From fc40166f25e4562470bbeef2439da5cf7525f25f Mon Sep 17 00:00:00 2001
From: X512 <danger_mail@list.ru>
Date: Mon, 26 Jul 2021 03:27:58 +0900
Subject: kernel: non-arch changes for riscv64 (2)

Change-Id: I8b7e280c9297d9ea3b4eed1c6705801a59c469ef
---
 src/system/kernel/cache/file_cache.cpp              | 2 +-
 src/system/kernel/debug/debug.cpp                   | 2 ++
 src/system/kernel/debug/frame_buffer_console.cpp    | 4 ++--
 src/system/kernel/debug/user_debugger.cpp           | 2 ++
 src/system/kernel/device_manager/device_manager.cpp | 7 ++++---
 src/system/kernel/main.cpp                          | 6 +++++-
 src/system/kernel/team.cpp                          | 3 +--
 7 files changed, 17 insertions(+), 9 deletions(-)

diff --git a/src/system/kernel/cache/file_cache.cpp b/src/system/kernel/cache/file_cache.cpp
index c2e010ecc9..4d8436f428 100644
--- a/src/system/kernel/cache/file_cache.cpp
+++ b/src/system/kernel/cache/file_cache.cpp
@@ -976,7 +976,7 @@ cache_prefetch_vnode(struct vnode* vnode, off_t offset, size_t size)
 
 	// Don't do anything if we don't have the resources left, or the cache
 	// already contains more than 2/3 of its pages
-	if (offset >= fileSize || vm_page_num_unused_pages() < 2 * reservePages
+	if (true /* !!! */ || offset >= fileSize || vm_page_num_unused_pages() < 2 * reservePages
 		|| 3 * cache->page_count > 2 * fileSize / B_PAGE_SIZE) {
 		cache->ReleaseRef();
 		return;
diff --git a/src/system/kernel/debug/debug.cpp b/src/system/kernel/debug/debug.cpp
index 59842a6eba..7418440dd7 100644
--- a/src/system/kernel/debug/debug.cpp
+++ b/src/system/kernel/debug/debug.cpp
@@ -1671,7 +1671,9 @@ debug_init(kernel_args* args)
 
 	debug_paranoia_init();
 	arch_debug_console_init(args);
+#ifdef __riscv
 	arch_debug_init_early(args);
+#endif
 }
 
 
diff --git a/src/system/kernel/debug/frame_buffer_console.cpp b/src/system/kernel/debug/frame_buffer_console.cpp
index a556ce158d..34d3023e58 100644
--- a/src/system/kernel/debug/frame_buffer_console.cpp
+++ b/src/system/kernel/debug/frame_buffer_console.cpp
@@ -444,11 +444,11 @@ frame_buffer_update(addr_t baseAddress, int32 width, int32 height, int32 depth,
 status_t
 frame_buffer_console_init(kernel_args* args)
 {
+	mutex_init(&sConsole.lock, "console_lock");
+
 	if (!args->frame_buffer.enabled)
 		return B_OK;
 
-	mutex_init(&sConsole.lock, "console_lock");
-
 	void* frameBuffer;
 	sConsole.area = map_physical_memory("vesa frame buffer",
 		args->frame_buffer.physical_buffer.start,
diff --git a/src/system/kernel/debug/user_debugger.cpp b/src/system/kernel/debug/user_debugger.cpp
index c94196f3c1..348040339e 100644
--- a/src/system/kernel/debug/user_debugger.cpp
+++ b/src/system/kernel/debug/user_debugger.cpp
@@ -2782,8 +2782,10 @@ ensure_debugger_installed()
 void
 _user_debugger(const char *userMessage)
 {
+#ifdef __riscv
 	WriteTrapInfo();
 	DoStackTrace(Fp(), 0);
+#endif
 	// install the default debugger, if there is none yet
 	status_t error = ensure_debugger_installed();
 	if (error != B_OK) {
diff --git a/src/system/kernel/device_manager/device_manager.cpp b/src/system/kernel/device_manager/device_manager.cpp
index 765d9dcb4a..a2779d7946 100644
--- a/src/system/kernel/device_manager/device_manager.cpp
+++ b/src/system/kernel/device_manager/device_manager.cpp
@@ -1732,6 +1732,7 @@ device_node::_GetNextDriverPath(void*& cookie, KPath& _path)
 					_AddPath(*stack, "busses/scsi");
 					_AddPath(*stack, "busses", "virtio");
 					_AddPath(*stack, "busses/random");
+					_AddPath(*stack, "bus_managers/pci");
 				}
 				break;
 		}
@@ -1792,7 +1793,7 @@ device_node::_FindBestDriver(const char* path, driver_module_info*& bestDriver,
 	void* list = open_module_list_etc(path, "driver_v1");
 	driver_module_info* driver;
 	while (_GetNextDriver(list, driver) == B_OK) {
-		dprintf("    candidate: \"%s\"\n", driver->info.name);
+//		dprintf("    candidate: \"%s\"\n", driver->info.name);
 		if (previous != NULL && driver == previous->DriverModule()) {
 			put_module(driver->info.name);
 			continue;
@@ -1857,7 +1858,7 @@ device_node::_AlwaysRegisterDynamic()
 status_t
 device_node::_RegisterDynamic(device_node* previous)
 {
-	dprintf("%p._RegisterDynamic()\n", this);
+//	dprintf("%p._RegisterDynamic()\n", this);
 	// If this is not a bus, we don't have to scan it
 	if (find_attr(this, B_DEVICE_BUS, false, B_STRING_TYPE) == NULL)
 		return B_OK;
@@ -1877,7 +1878,7 @@ device_node::_RegisterDynamic(device_node* previous)
 		void* cookie = NULL;
 
 		while (_GetNextDriverPath(cookie, path) == B_OK) {
-			dprintf("  candidate: \"%s\"\n", path.Path());
+//			dprintf("  candidate: \"%s\"\n", path.Path());
 			_FindBestDriver(path.Path(), bestDriver, bestSupport, previous);
 		}
 
diff --git a/src/system/kernel/main.cpp b/src/system/kernel/main.cpp
index a3fdb1ac6f..ae8bd70cfb 100644
--- a/src/system/kernel/main.cpp
+++ b/src/system/kernel/main.cpp
@@ -94,9 +94,13 @@ non_boot_cpu_init(void* args, int currentCPU)
 }
 
 
+extern "C" status_t arch_debug_console_init(kernel_args *args);
+
+
 extern "C" int
 _start(kernel_args *bootKernelArgs, int currentCPU)
 {
+	arch_debug_console_init(bootKernelArgs);
 	debug_early_boot_message("Kernel entry point\n");
 
 	if (bootKernelArgs->version == CURRENT_KERNEL_ARGS_VERSION
@@ -374,7 +378,7 @@ main2(void* /*unused*/)
 	// The boot splash screen is the last user of the kernel args.
 	// Note: don't confuse the kernel_args structure (which is never freed)
 	// with the kernel args ranges it contains (and which are freed here).
-	// vm_free_kernel_args(&sKernelArgs);
+	vm_free_kernel_args(&sKernelArgs);
 
 	// start the init process
 	{
diff --git a/src/system/kernel/team.cpp b/src/system/kernel/team.cpp
index 9f17b31029..431edd09aa 100644
--- a/src/system/kernel/team.cpp
+++ b/src/system/kernel/team.cpp
@@ -444,7 +444,7 @@ Team::Team(team_id id, bool kernel)
 	fArgs[0] = '\0';
 	num_threads = 0;
 	io_context = NULL;
-	address_space = NULL;
+	address_space = kernel ? VMAddressSpace::Kernel() : NULL;
 	realtime_sem_context = NULL;
 	xsi_sem_context = NULL;
 	thread_list = NULL;
@@ -1650,7 +1650,6 @@ team_create_thread_start_internal(void* args)
 			strerror(commPageArea)));
 		return commPageArea;
 	}
-	dprintf("clone_commpage_area: %p\n", team->commpage_address);
 
 	// Register commpage image
 	image_id commPageImage = get_commpage_image();
-- 
2.30.2

